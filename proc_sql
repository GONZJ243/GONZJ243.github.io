CREATE OR REPLACE PROCEDURE process_edits()
RETURNS STRING
LANGUAGE SQL
AS
$$
DECLARE
    v_id STRING;
    v_field STRING;
    v_value STRING;
    v_sql STRING;
BEGIN
    -- Cursor to loop through all pending edits
    FOR edit_row IN (SELECT ID, field_to_update, newValue FROM EDITS_TO_PROCESS)
    DO
        LET v_id = edit_row.ID;
        LET v_field = edit_row.field_to_update;
        LET v_value = edit_row.newValue;

        -- Construct dynamic SQL
        LET v_sql = 'UPDATE PROJECTS SET ' || IDENTIFIER(:v_field) || ' = ' || 
                    CASE 
                        WHEN TRY_TO_NUMBER(v_value) IS NOT NULL THEN v_value
                        ELSE '''' || REPLACE(v_value, '''', '''''') || ''''
                    END || 
                    ' WHERE field1 = ''' || REPLACE(v_id, '''', '''''') || '''';

        -- Execute dynamic SQL
        EXECUTE IMMEDIATE :v_sql;
    END FOR;

    RETURN 'Edits processed successfully.';
END;
$$;
